@page "/elencooggetti"

<h3>ElencoOggetti</h3>

<div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="Cerca" @bind="strCerca" @bind:event="oninput">
</div>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th scope="col">Codice</th>
            <th scope="col">Tipo</th>
            <th scope="col">Materiale principale</th>
            <th scope="col">Epoca</th>
            <th scope="col">Prezzo</th>
            <th scope="col">Stand</th>
            <th scope="col">Acquirente</th>
            <th scope="col">Dettagli</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in myList.Where(k => k.tipo.Contains(strCerca))) //per ogni oggetto nella lista scrivo i valori su una riga
        {
            <tr>
                <th scope="row">@item.idOggetto</th>
                <td>@item.tipo</td>
                <td>@((item.materialePrincipale == "") ? "Non presente" : item.materialePrincipale)</td>
                <td>@((item.epoca == "") ? "Non presente" : item.epoca + " secolo")</td>
                <td>@item.prezzoEsposto €</td>
                <td>@item.standId</td>
                <td>@((item.visitatoreId == null) ? "Non acquistato" : item.visitatoreId)</td>
                <td><a href="/dettagliooggetto/@item.idOggetto">Dettagli</a></td>
            </tr>
        }
    </tbody>
</table>

@code {
    string strCerca = "";

    List<Oggetto> myList = new List<Oggetto>();

    private void CaricaDatiArchivio()
    {
        myList.Clear();

        string connString = "Data Source=Data/dbAntiquariato.db";
        SqliteConnection myConn = new SqliteConnection(connString);
        SqliteCommand myCommand = new SqliteCommand("SELECT * FROM tblOggetti;");
        SqliteDataReader myDr;
        myCommand.Connection = myConn;


        myConn.Open();
        myDr = myCommand.ExecuteReader();

        while (myDr.Read())
        {
            Oggetto nuovoOggetto = new Oggetto
                {
                    idOggetto = Convert.ToInt32(myDr["idOggetto"]),
                    tipo = Convert.ToString(myDr["tipo"]).ToLower(),
                    materialePrincipale = Convert.ToString(myDr["materialePrincipale"]),
                    epoca = Convert.ToString(myDr["epoca"]),
                    prezzoEsposto = Convert.ToDecimal(myDr["prezzoEsposto"]),
                    standId = Convert.ToInt32(myDr["standId"]),
                    visitatoreId = (myDr["visitatoreId"] == DBNull.Value) ? null : Convert.ToInt32(myDr["visitatoreId"])
                };
            myList.Add(nuovoOggetto);
        }
        myConn.Close();
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        CaricaDatiArchivio();
    }
}
